import numpy as np
import pandas as pd
import xgboost as xgb
import math as m
import joblib
import warnings
import openml
from autoBaggingClassifier import autoBaggingClassifier
from sklearn.base import BaseEstimator
from sklearn.preprocessing import LabelEncoder
from sklearn.naive_bayes import GaussianNB
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import BaggingClassifier
from sklearn.dummy import DummyClassifier
from sklearn.multioutput import MultiOutputRegressor
from sklearn.model_selection import ParameterGrid
from sklearn.model_selection import KFold
from sklearn.model_selection import cross_val_score
from sklearn.impute import SimpleImputer
from sklearn.metrics import cohen_kappa_score
from sklearn.model_selection import train_test_split
from metafeatures.core.object_analyzer import analyze_pd_dataframe
from metafeatures.meta_functions.entropy import Entropy
from metafeatures.meta_functions import basic as basic_meta_functions
from metafeatures.meta_functions.pearson_correlation import PearsonCorrelation
from metafeatures.meta_functions.mutual_information import MutualInformation
from metafeatures.meta_functions.spearman_correlation import SpearmanCorrelation
from metafeatures.post_processing_functions.basic import Mean, StandardDeviation, Skew, Kurtosis
from metafeatures.post_processing_functions.basic import NonAggregated
from metafeatures.core.engine import metafeature_generator
from sklearn.utils.multiclass import type_of_target

#######################################################
################### MAIN FUNCTION #####################
#######################################################

warnings.simplefilter(action='ignore', category=FutureWarning)
openml.config.apikey = '2754bfd67b4aa8a5854f00d3fc4bdd89'
TargetNames = []
Datasets = []
### LOCAL DATASETS ###
# try:
    
#     #Datasets.append(pd.read_csv('./datasets_classifier/titanic.csv'))
#     #TargetNames.append('Survived')
#     Datasets.append(pd.read_csv('./datasets_classifier/heart.csv'))
#     TargetNames.append('target')
#     Datasets.append(pd.read_csv('./datasets_classifier/titanic.csv'))#     TargetNames.append('Survived')
# except FileNotFoundError:
#     print(
#         "Path do dataset est√° errado, deve conter uma pasta 'dataset' no path do ficheiro autoBagging")
#     quit()
######################

####### OPENML #######
# index = [1765, 1766, 1767, 1771, 1776, 1778, 1780, 1781, 1784, 1786, 1788, 1789, 1790, 1791, 1792, 1795, 1796, 1797, 1798, 1799, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 244, 246, 247, 249, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1892, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1911, 1912, 1913, 1914, 1915, 1919, 1921, 1923, 1925, 1931, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1803, 1805, 1807, 1809, 1815, 1821, 1822, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 255, 256, 257, 258, 261, 262, 263, 264, 265, 269, 271, 273, 275, 281, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2931, 2932, 2933, 2936, 2937, 2939, 2941, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2982, 2983, 2984, 2991, 2992, 3017, 3020, 3023, 3024, 3026, 3031, 3032, 3033, 3034, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3941, 3944, 3947, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4215, 4217, 4218, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 3890, 3892, 3895, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4186, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4614, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4640, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 4684, 4685, 4686, 4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698, 4699, 4700, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4551, 4552, 4553, 4554, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4595, 4596, 4597, 4598, 4599, 4600, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4401, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 4422, 4423, 4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447, 4448, 4449, 4450, 4701, 4702, 4703, 4704, 4705, 4706, 5481, 6566, 17, 25, 151, 152, 153, 154, 155, 156, 157, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 2104, 2112, 2113, 2114, 2118, 2120, 2122, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2144, 2145, 2147, 2148, 2072, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2270, 2271, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 1953, 1955, 1957, 1958, 1960, 1961, 1962, 1963, 1965, 1966, 1968, 1969, 1970, 1971, 1975, 1977, 1985, 1991, 2351, 2352, 2353, 2354, 2355, 2356, 2371, 3572, 3505, 3506, 3508, 3520, 3521, 3525, 3528, 3529, 3530, 3531, 3533, 3534, 3489, 3490, 7307, 7394, 7395, 7396, 7286, 7287, 7290, 7291, 7293, 7294, 7553, 7554, 7560, 7530, 7537, 7542, 7543, 9890, 9891, 9895, 9896, 7608, 10090, 10092, 9912, 9913, 9934, 9935, 9936, 9965, 9966, 9974, 9987, 10105, 10106, 10107, 10109, 10111, 12736, 12737, 12738, 12739, 13004, 13907, 13908, 13917, 14947, 14948, 14953, 14963, 14971, 75201, 75202, 75203, 75204, 75205, 75206, 75207, 75208, 75209, 75210, 75211, 75212, 75213, 75214, 75215, 75216, 75217, 75218, 75219, 75220, 75221, 75222, 75223, 75224, 75225, 75226, 75227, 75228, 75229, 75230, 75231, 75232, 75233, 75234, 75235, 75236, 75237, 75238, 75239, 75240, 75241, 75242, 75243, 75244, 75245, 75246, 75247, 75248, 75249, 75250, 75151, 75152, 75153, 75154, 75155, 75156, 75157, 75158, 75159, 75160, 75161, 75162, 75163, 75164, 75165, 75166, 75167, 75168, 75169, 75170, 75171, 75172, 75173, 75174, 75175, 75176, 75177, 75178, 75179, 75180, 75181, 75182, 75183, 75184, 75185, 75186, 75187, 75188, 75189, 75190, 75191, 75192, 75194, 75195, 75196, 75197, 75198, 75199, 75200, 75101, 75102, 75103, 75104, 75105, 75106, 75107, 75108, 75109, 75110, 75111, 75112, 75113, 75114, 75115, 75116, 75117, 75118, 75119, 75120, 75121, 75122, 75123, 75124, 75125, 75126, 75127, 75128, 75129, 75130, 75131, 75132, 75133, 75134, 75135, 75136, 75137, 75138, 75139, 75140, 75141, 75142, 75143, 75144, 75145, 75146, 75147, 75148, 75149, 75150, 75089, 75090, 75091, 75092, 75093, 75094, 75095, 75096, 75097, 75099, 75100, 75251, 52945, 52946, 52947, 52950, 34536, 125917, 125918, 125968, 125969, 125970, 126021, 126022, 126023, 126024, 126025, 126026, 126027, 126028, 126029, 126030, 126031, 145676, 145679, 145680, 145681, 145682, 145683, 145684, 145685, 145950, 145951, 145952, 145953, 145954, 145955, 145956, 145957, 145958, 145959, 145960, 145961, 145962, 145963, 145964, 145965, 145966, 145967, 145968, 145969, 145970, 145971, 145972, 145973, 145974, 145975, 145977, 145978, 145979, 145980, 145981, 145982, 145983, 145984, 145985, 145986, 145987, 145988, 145989, 145990, 145991, 145992, 145993, 145994, 145995, 145996, 145997, 145998, 145999, 146050, 146051, 146052, 146053, 146054, 146055, 146056, 146057, 146058, 146059, 146060, 146061, 146062, 146063, 146064, 146066, 146067, 146068, 146069, 146070, 146071, 146072, 146073, 146074, 146075, 146076, 146077, 146078, 146079, 146080, 146081, 146082, 146083, 146084, 146085, 146086, 146087, 146088, 146089, 146090, 146091, 146092, 146093, 146094, 146095, 146096, 146097, 146098, 146099, 146000, 146001, 146002, 146003, 146004, 146005, 146006, 146007, 146008, 146009, 146010, 146011, 146012, 146013, 146014, 146015, 146016, 146017, 146018, 146019, 146020, 146021, 146022, 146023, 146024, 146025, 146026, 146027, 146028, 146029, 146030, 146031, 146032, 146033, 146034, 146035, 146036, 146037, 146038, 146039, 146040, 146041, 146042, 146043, 146044, 146045, 146046, 146047, 146048, 146049, 145800, 145801, 145802, 145803, 145805, 145806, 145807, 145808, 145809, 145810, 145811, 145812, 145813, 145814, 145815, 145816, 145817, 145818, 145819, 145820, 145821, 145822, 145823, 145824, 145825, 145826, 145827, 145828, 145829, 145830, 145831, 145832, 145833, 145834, 145835, 145836, 145837, 145838, 145839, 145840, 145841, 145842, 145843, 145844, 145845, 145846, 145847, 145848, 145849, 146100, 146101, 146102, 146103, 146104, 146105, 146106, 146107, 146108, 146109, 146110, 146111, 146112, 146113, 146114, 146115, 146116, 146117, 146118, 146119, 146120, 146121, 146122, 146123, 146124, 146125, 146126, 146127, 146128, 146129, 146130, 146131, 146132, 146133, 146134, 146135, 146136, 146137, 146138, 146139, 146140, 146141,
#146142, 146143, 146144, 146145, 146146, 146147, 146148, 146149, 145850, 145851, 145852, 145853, 145854, 145856, 145857, 145858, 145859, 145860, 145861, 145862, 145863, 145864, 145865, 145866, 145867, 145868, 145869, 145870, 145871, 145872, 145873, 145874, 145875, 145876, 145877, 145878, 145879, 145880, 145881, 145882, 145883, 145884, 145885, 145886, 145887, 145888, 145889, 145890, 145891, 145892, 145893, 145894, 145895, 145896, 145897, 145898, 145899, 145900, 145901, 145902, 145903, 145904, 145905, 145906, 145907, 145908, 145909, 145910, 145911, 145912, 145913, 145914, 145915, 145916, 145917, 145918, 145919, 145920, 145921, 145922, 145923, 145924, 145925, 145926, 145927, 145928, 145929, 145930, 145931, 145932, 145933, 145934, 145935, 145936, 145937, 145938, 145939, 145940, 145941, 145942, 145943, 145944, 145945, 145946, 145947, 145948, 145949, 145791, 145792, 145793, 145794, 145795, 145796, 145797, 145798, 145799, 146550, 146551, 146552, 146553, 146554, 146555, 146556, 146557, 146558, 146559, 146560, 146561, 146562, 146563, 146564, 146565, 146566, 146567, 146572, 146573, 146574, 146575, 146576, 146577, 146578, 146579, 146580, 146581, 146582, 146583, 146584, 146585, 146586, 146587, 146588, 146589, 146590, 146591, 146592, 146593, 146594, 146595, 146596, 146597, 146598, 146599, 146543, 146544, 146545, 146546, 146547, 146548, 146549, 146202, 146203, 146204, 146205, 146206, 146207, 146208, 146209, 146210, 146213, 146214, 146216, 146217, 146219, 146221, 146222, 146223, 146224, 146226, 146228, 146230, 146232, 146233, 146234, 146235, 146236, 146237, 146238, 146239, 146240, 146241, 146242, 146243, 146244, 146246, 146150, 146151, 146152, 146153, 146154, 146155, 146156, 146157, 146158, 146159, 146160, 146161, 146162, 146163, 146164, 146165, 146166, 146167, 146168, 146169, 146170, 146171, 146172, 146173, 146174, 146175, 146176, 146177, 146178, 146179, 146180, 146181, 146182, 146183, 146184, 146185, 146188, 146191, 146192, 146193, 146194, 146196, 146197, 146198, 146199, 146802, 146803, 146804, 146805, 146806, 146807, 146808, 146809, 146810, 146811, 146812, 146823, 146600, 146601, 146602, 146603, 146604, 146605, 146609, 146610, 146611, 146612, 146613, 146614, 146615, 146616, 146617, 146618, 146619, 146620, 146621, 146622, 146623, 146624, 146625, 146626, 146627, 146628, 146629, 146630, 146631, 146632, 146633, 146634, 146635, 146636, 146637, 146638, 146639, 146640, 146641, 146642, 146643, 146644, 146645, 146646, 146647, 146648, 146649, 146650, 146651, 146652, 146653, 146654, 146655, 146656, 146657, 146658, 146659, 146660, 146661, 146662, 146663, 146664, 146665, 146666, 146667, 146668, 146669, 146670, 146671, 146672, 146673, 146674, 146675, 146676, 146677, 146678, 146679, 146680, 146683, 146684, 146688, 146689, 146693, 146694, 167100, 167101, 167102, 167103, 167104, 167105, 167106, 167107, 167108, 167109, 167110, 167111, 167112, 167113, 167114, 167115, 167116, 167117, 167118, 167122, 167123, 167126, 167127, 167129, 167130, 167131, 167132, 167133, 167138, 167144, 167145, 167149, 167200, 167201, 167202, 167203, 167204, 167205, 167206, 167207, 167208, 167212, 167213, 167214, 167215, 167150, 167151, 167152, 167153, 167154, 167155, 167156, 167157, 167158, 167159, 167160, 167161, 167162, 167163, 167164, 167165, 167166, 167167, 167168, 167169, 167170, 167171, 167172, 167173, 167174, 167175, 167176, 167177, 167178, 167179, 167180, 167181, 167182, 167183, 167185, 167186, 167187, 167188, 167189, 167190, 167191, 167192, 167193, 167194, 167195, 167196, 167197, 167198, 167199, 167050, 167051, 167052, 167053, 167054, 167055, 167056, 167057, 167058, 167059, 167060, 167061, 167062, 167063, 167064, 167065, 167066, 167067, 167068, 167069, 167070, 167071, 167072, 167073, 167074, 167075, 167076, 167077, 167078, 167079, 167080, 167081, 167082, 167083, 167085, 167086, 167087, 167088, 167089, 167090, 167091, 167092, 167093, 167094, 167095, 167096, 167097, 167098, 167099, 167000, 167001, 167002, 167003, 167004, 167005, 167006, 167007, 167008, 167009, 167010, 167011, 167012, 167013, 167014, 167015, 167016, 167017, 167018, 167019, 167020, 167021, 167022, 167023, 167024, 167025, 167026, 167027, 167028, 167029, 167030, 167031, 167032, 167033, 167034, 167035, 167036, 167037, 167038, 167039, 167040, 167041, 167042, 167043, 167044, 167045, 167046, 167047, 167048, 167049, 168888, 168739, 168746, 168350, 166842, 166844, 166845, 166846, 166850, 166851, 166853, 166854, 166855, 166856, 166857, 166858, 166859, 166860, 166861, 166862, 166863, 166864, 166865, 166866, 166867, 166868, 166869, 166870, 166871, 166872, 166873, 166874, 166875, 166876, 166877, 166878, 166879, 166880, 166881, 166882, 166883, 166884, 166885, 166886, 166887, 166888, 166889, 166890, 166891, 166892, 166893, 166894, 166895, 166896, 166897, 166898, 166899, 166950, 166951, 166952, 166953, 166954, 166955, 166956, 166957, 166958, 166959, 166960, 166961, 166962, 166963, 166964, 166965, 166966, 166967, 166968, 166969, 166970, 166971, 166972, 166973, 166974, 166975, 166976, 166977, 166978, 166979, 166980, 166981, 166982, 166983, 166984, 166985, 166986, 166987, 166988, 166989, 166990, 166991, 166992, 166993, 166994, 166995, 166996, 166997, 166998, 166999, 166900, 166901, 166902, 166903, 166904, 166905, 166906, 166907, 166908, 166909, 166910, 166911, 166912, 166913, 166914, 166915, 166916, 166917, 166918, 166919, 166920, 166921, 166922, 166923, 166924, 166925, 166926, 166927, 166928, 166929, 166930, 166931, 166932, 166933, 166934, 166935, 166936, 166937, 166938, 166939, 166940, 166941, 166942, 166943, 166944, 166945, 166946, 166947, 166948, 166949, 168294, 168297, 168298, 168299, 168300, 168302, 168303, 168304, 168308, 168310, 168311, 168312, 168313, 168314, 168321, 168327, 168328, 168333, 168334, 168336, 168339, 168340, 168341, 168342, 168343, 168348, 168349, 168757, 168783, 168784, 168785, 168786, 168787, 168788, 168789, 168790, 168791, 168792, 168793, 168794, 168795, 168796, 168797, 168798, 168800, 168801, 168802, 168803, 168804, 168805, 168806, 168807, 168808, 168809, 168810, 168811, 168812, 168813, 168814, 168815, 168816, 168817, 168818, 168819, 168820, 168821, 168822, 168823, 168824, 168825, 168826, 168827, 168828, 168829, 168830, 168831, 168832, 168833, 168834, 168835, 168836, 168837, 168838, 168839, 168840, 168841, 168842, 168843, 168844, 168845, 168846, 168847, 168848, 168849, 168850, 168851, 168852, 168853, 168854, 168855, 168856, 168857, 168858, 168859, 168860, 168861, 168862, 168863, 168864, 168865, 168866, 168867, 168870, 168871, 168872, 168873, 168874, 168875, 168876, 168877, 168878, 168879, 168880, 168881, 168883, 168884, 168885, 3025, 3044, 3043, 168896, 168907, 146607, 145976, 189762, 189778, 1768, 189781, 189780, 189779, 189827, 189828, 189831, 189832, 189833, 189830, 189834, 189835, 189829, 189836, 189837, 189843, 189841, 189839, 189842, 189838, 189840, 189844, 189845, 189846, 189849, 189850, 189853, 189852, 189847, 189848, 189851, 189871, 189864, 189863, 189870, 189866, 189865, 189868, 189867, 189869, 189888, 189887, 189889, 189882, 189883, 189885, 189881, 189884, 189886, 189909, 189908, 189910, 189922, 189921, 75098, 146065, 14968, 190134, 190137, 190139, 190140, 190141, 190145, 190143, 190142, 190144, 34537, 189357, 14967, 34538, 167139, 189358, 189773, 145855, 189786, 189789, 189788, 189787, 189790, 189783, 189784, 189785, 189782, 189798, 189796, 189799, 189797, 189795, 189794, 189792, 189793, 189791, 189807, 189805, 189808, 189806, 189804, 189803, 189801, 189802, 189800, 189810, 189809, 189817, 189813, 189816, 189815, 189812, 189811, 189814, 189822, 189825, 189826, 189821, 189823, 189820, 189824, 189819, 189818, 189859, 189856, 189855, 189854, 189857, 189858, 189860, 189861, 189862, 189878, 189877, 189875, 189879, 189880, 189872, 189876, 189874, 189873, 189890, 189891, 189895, 189897, 189898, 189892, 189893, 189894, 189896, 189904, 189899, 189903, 189906, 189901, 189907, 189900, 189902, 189905, 189925, 189924, 189923, 189926, 189928, 189927, 4278, 189929, 189930, 189937, 189934, 189938, 189939, 189932, 168305, 168306, 146690, 2117, 189941, 190136, 190146, 9945, 190150, 167184, 190151, 190153, 190154, 190155, 190158, 190156, 190157, 190159, 189942, 189945, 189944, 189943, 189946, 189948, 189951, 189949, 189952, 189950, 189953, 189955, 189947, 189954, 189964, 189963, 189961, 189957, 189958, 189956, 189959, 189960, 189962, 189970, 189967, 189973, 189969, 189971, 189972, 189966, 189968, 189978, 189976, 189982, 189980, 189974, 189975, 189977, 189965, 189979, 189981, 189990, 189983, 189987, 189986, 189984, 189985, 189989, 189988, 189991, 189992, 189996, 189997, 189993, 189998, 190000, 189994, 189995, 189999, 190006, 190005, 190009, 190007, 190002, 190008, 190003, 190004, 190001, 190010, 190011, 190013, 190016, 190017, 190014, 190018, 190012, 190015, 190021, 190024, 190027, 190022, 190026, 190019, 190025, 190020, 190023, 190031, 190029, 190030, 190035, 190028, 190033, 190034, 190036, 190032, 190044, 190042, 190045, 190037, 190043, 190039, 190041, 190040, 190038, 190048, 190049, 190052, 190054, 190046, 190047, 190050, 190053, 190051, 190058, 190057, 190059, 190062, 190056, 190060, 190055, 190061, 190063, 190072, 190071, 190067, 190066, 190068, 190069, 190070, 190064, 190065, 190075, 190080, 190073, 190076, 190078, 190077, 190079, 190081, 190074, 190089, 190088, 190085, 190087, 190090, 190086, 190084, 190082, 190083, 190096, 190094, 190095, 190097, 190091, 190093, 190092, 190098, 190099, 190104, 190105, 190106, 190102, 190107, 190108, 190100, 190101, 190103, 190115, 190111, 190113, 190116, 190112, 190109, 190114, 190110, 190117, 190125, 190122, 190126, 190120, 190121, 190123, 190118, 190124, 190119, 190130, 190127, 190131, 190133, 190129, 190128, 190132, 8, 248, 243, 253, 240, 245, 241, 259, 238, 270, 266, 267, 268, 272, 279, 278, 260, 277, 290, 289, 282, 280, 283, 284, 285, 1777, 1774, 1779, 1775, 1772, 1804, 1782, 1800, 1801, 1787, 1802, 1806, 1794, 1793, 1823, 1816, 1813, 1812, 1814, 1817, 1811, 1818, 1819, 1898, 1893, 1824, 1890, 1903, 1895, 1891, 1909, 1888, 1920, 1917, 1916, 1918,
# 1929, 1928, 1927, 1922, 1910, 1940, 1939, 1932, 1930, 1933, 1934, 1935, 1951, 1949, 1959, 1954, 1972, 1973, 1964, 1974, 1952, 1956, 1967, 1976, 1986, 1983, 1984, 1982, 1981, 1987, 1978, 1988, 1993, 1992, 1989, 2121, 2111, 2119, 2125, 2124, 2123, 2930, 2940, 2938, 2944, 2943, 2942, 2993, 19, 167121, 1773, 190138, 190392, 167124, 190393, 190395, 190394, 1770, 145804, 125923, 190397, 14964, 9986, 1769, 167211, 190400, 190401, 14966, 190402, 190404, 190403, 167125, 190405, 168882, 145677, 190408, 190409, 190413, 190410, 190407, 190412, 190411, 3948, 3946, 125966, 146227, 146231, 190415, 190399, 1785, 190406, 3945, 7593, 146212, 34539, 146818, 168332, 168331, 168330, 168337, 168335, 168338, 168329, 168868, 168908, 168912, 168910, 168909, 189354, 168911, 189356, 189355, 2867, 3900, 3937, 7295, 7306, 7555, 7548, 7549, 4001, 7547, 7556, 9897, 9898, 9894, 9893, 7557, 9892, 7558, 7559, 9889, 9907, 9902, 9904, 9906, 9903, 9901, 9905, 9899, 9900, 9908, 9909, 9919, 9918, 9917, 9915, 9916, 9911, 9926, 9927, 9921, 9925, 9920, 9923, 9924, 9928, 9922, 9938, 9937, 9939, 9930, 9931, 9932, 9929, 9940, 9933, 9947, 9948, 9944, 9942, 9949, 9941, 9943, 9958, 9953, 9951, 9959, 9969, 9961, 9962, 9973, 9972, 9982, 9975, 10089, 9988, 9984, 10091, 9990, 9989, 9991, 10095, 10096, 10094, 10097, 10100, 10098, 10099, 10103, 10104, 9980, 9914, 9979, 9967, 9970, 9956, 9954, 9955, 9968, 9950, 7, 5, 2, 4, 1, 13, 9, 26, 27, 33, 35, 34, 30, 38, 42, 40, 39, 47, 48, 52, 57, 54, 55, 50, 51, 2065, 2073, 2067, 2068, 145, 60, 206, 2071, 2075, 2272, 2076, 2146, 2142, 2077, 2078, 2276, 2273, 2274, 2275, 3011, 2372, 2373, 2382, 3010, 3012, 3483, 3018, 3484, 3019, 3486, 3496, 3495, 3488, 3487, 3491, 3501, 3500, 3499, 3497, 3498, 3507, 3504, 3502, 3503, 3518, 3517, 3513, 3516, 3522, 3523, 3519, 3527, 3536, 3537, 3538, 3526, 3524, 3535, 3532, 3539, 3540, 3542, 3545, 3544, 3546, 3548, 3547, 3552, 3550, 3556, 3558, 3554, 3557, 3551, 3553, 3555, 3559, 3564, 3565, 3566, 3562, 3577, 3568, 3569, 3570, 3574, 3576, 3575, 3571, 3584, 3581, 3578, 3582, 3583, 3580, 3585, 3586, 3579, 3590, 3594, 3595, 3589, 3592, 3587, 3593, 3591, 3588, 3602, 3599, 3598, 3596, 3601, 3600, 3597, 3603, 3604, 3607, 3606, 3608, 3611, 3609, 3612, 3610, 3613, 3605, 3614, 3617, 3622, 3615, 3620, 3619, 3621, 3618, 3616, 3631, 3630, 3624, 3625, 3626, 3628, 3629, 3627, 3623, 3637, 3633, 3640, 3635, 3632, 3634, 3639, 3638, 3636, 3647, 3649, 3641, 3645, 3648, 3642, 3646, 3644, 3643, 3650, 3656, 3652, 3654, 3658, 3657, 3653, 3651, 3655, 3660, 3662, 3666, 3659, 3664, 3663, 3661, 3665, 3667, 3676, 3669, 3671, 3668, 3670, 3673, 3672, 3675, 3674, 3683, 3685, 3684, 3679, 3678, 3677, 3682, 3680, 3681, 3692, 3693, 3689, 3690, 3694, 3687, 3686, 3691, 3688, 3700, 3699, 3702, 3695, 3703, 3697, 3701, 3696, 3698, 3707, 3710, 3704, 3705, 3711, 3709, 3708, 3712, 3706, 3717, 3714, 3715, 3720, 3716, 3713, 3718, 3721, 3719, 3723, 3730, 3727, 3729, 3722, 3724, 3725, 3726, 3728, 3731, 3733, 3737, 3732, 3734, 3739, 3738, 3735, 3736, 3740, 3741, 3742, 3743, 3748, 3747, 3744, 3746, 3745, 3756, 3752, 3751, 3750, 3757, 3754, 3755, 3749, 3753, 3762, 3758, 3763, 3766, 3759, 3765, 3760, 3761, 3764, 3772, 3769, 3771, 3773, 3767, 3775, 3774, 3768, 3770, 3784, 3778, 3780, 3776, 3783, 3781, 3779, 3782, 3777, 3788, 3790, 3785, 3787, 3789, 3793, 3792, 3791, 3786, 3800, 3795, 3798, 3799, 3796, 3794, 3802, 3801, 3797, 3810, 3809, 3806, 3807, 3804, 3805, 3803, 3808, 3811, 3815, 3819, 3812, 3813, 3814, 3817, 3818, 3816, 3820, 3824, 3825, 3823, 3829, 3822, 3821, 3828, 3827, 3826, 3833, 3831, 3832, 3837, 3838, 3835, 3834, 3830, 3836, 3844, 3841, 3842, 3847, 3843, 3840, 3845, 3846, 3839, 3849, 3856, 3855, 3848, 3850, 3854, 3851, 3852, 3861, 3858, 3865, 3860, 3863, 3859, 3857, 3862, 3864, 3853, 3871, 3867, 3869, 3872, 3874, 3866, 3868, 3870, 3873, 3883, 3877, 3876, 3882, 3875, 3880, 3881, 3878, 3879, 3887, 3885, 3884, 3894, 3888, 3893, 3886, 3901, 3898, 3905, 3897, 3909, 3914, 3911, 3912, 3907, 3910, 3906, 3908, 3921, 3923, 3916, 3915, 3919, 3922, 3920, 3952, 3943, 3939, 3938, 3940, 3951, 3942, 3950, 21, 20, 10, 36, 41, 24, 3953, 3955, 3543, 3896, 3889, 3891, 3899, 3493, 3494, 3510, 3563, 3492, 3512, 3567, 3954, 3485, 59, 75193, 125921, 14951, 190421, 190424, 3949, 9963, 1783, 9983, 146606, 3561, 58, 167140, 167141, 14, 12, 15, 18, 16, 23, 22, 31, 28, 3, 6, 11, 43, 49, 53, 37, 29, 219, 2074, 32, 3022, 45, 3560, 3481, 3549, 2079, 3021, 3902, 3913, 3918, 3917, 3903, 3904, 3573, 9946, 7592, 9910, 9964, 9960, 9981, 9978, 9952, 9957, 9971, 9976, 9977, 10101, 14969, 9985, 10093, 125920, 14965, 14954, 14952, 14970, 146817, 125922, 146819, 146822, 146800, 146824, 146195, 146821, 146820, 146825, 167119, 167120]
index = [551,555,556,557,561,562,674,659,661,663,665,703,710,712,684,686,687,688,690,692,697,1035,1027,1028,1029,1030,301,573,1089,1097,1098,1099,1072,1070,1091,1093,544,549,1228,456,482,483,485,506,509,510,521,523,524,526,527,530,533,535,536,539,540,511,513,515,516,518,519,520,491,492,494,497,498,191,194,195,197,199,200,203,204,205,207,224,227,230,231,211,213,427,287,294,298,299,42176,42178,42111,42112,42113,42110,42165,42166,41943,40505,41514,41515,41516,41517,41518,41519,41021,41968,41969]

GoodDatasets = []
print("Starting Getting datasets(", len(index),")")
for i in index:
    try:
        dataset = openml.datasets.get_dataset(i)
        X, y, categorical_indicator, attribute_names = dataset.get_data(dataset_format='dataframe')
        target = dataset.default_target_attribute
        dtype = X[target].dtype
        y_type = type_of_target(X[target])
        
        if y_type in ['binary', 'multiclass', 'multiclass-multioutput',
                      'multilabel-indicator', 'multilabel-sequences']:
            if dtype in (np.object,):
                print("Dataset V√°lido = ",y_type)
                Datasets.append(X)
                TargetNames.append(target)
                GoodDatasets.append(i)
            elif dtype in (np.int, np.int32, np.int64, np.float, np.float32,
                        np.float64, int, float):
                print("Dataset V√°lido = ",y_type)
                Datasets.append(X)
                TargetNames.append(target)
                GoodDatasets.append(i)
        else:     
            print("Invalid!")      
        
    except Exception:
        print("Error ", i)

with open("ValidDatasets.txt", "w") as txt_file:
    for id in GoodDatasets:
        txt_file.write(str(id) + ",")
#####################

post_processing_steps = [Mean(),
                         StandardDeviation(),
                         Skew(),
                         Kurtosis()]


meta_functions = [Entropy(),
                 #PearsonCorrelation(),
                  MutualInformation(),
                  SpearmanCorrelation(),
                  basic_meta_functions.Mean(),
                  basic_meta_functions.StandardDeviation(),
                  basic_meta_functions.Skew(),
                  basic_meta_functions.Kurtosis()]


#######################################################
################ AutoBagging Classifier################
#######################################################
print("\n\n\n***************** AutoBagging Classifier *****************")
model = autoBaggingClassifier(meta_functions=meta_functions,
                              post_processing_steps=post_processing_steps)
model = model.fit(Datasets, TargetNames)
joblib.dump(model, "./models/autoBaggingClassifierModel.sav")


#######################################################
################ Loading Test Dataset #################
#######################################################
dataset = pd.read_csv('./datasets_classifier/test/weatherAUS.csv')
dataset = dataset.drop('RISK_MM', axis=1)
targetname = 'RainTomorrow'
dataset[targetname] = dataset[targetname].map({'No': 0, 'Yes' : 1}).astype(int)
dataset.fillna((-999), inplace=True)
for f in dataset.columns:
    if dataset[f].dtype == 'object':
        dataset = dataset.drop(columns=f, axis=1)

dataset_train, dataset_test = train_test_split(dataset,test_size=0.33,
                                                    random_state=0,shuffle=True)
X_train = SimpleImputer().fit_transform(dataset_train.drop(targetname, axis=1))
y_train = dataset_train[targetname]
X_test = SimpleImputer().fit_transform(dataset_test.drop(targetname, axis=1))
y_test = dataset_test[targetname]

#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33,
#                   random_state=0,shuffle=False)


# Getting recommended Bagging model of the dataset
bestBagging = model.predict(dataset_train,targetname)
# Getting Default Bagging
DefaultBagging = BaggingClassifier(random_state=0)
DefaultBagging.fit(X_train,y_train)
print("Verify Bagging algorithm score:")
#######################################################
################## Testing Bagging ####################
#######################################################

score = bestBagging.score(X_test,y_test)
print("Recommended  Bagging --> Score: %0.2f" % score)
score = DefaultBagging.score(X_test,y_test)
print("Default Bagging --> Score: %0.2f" % score)
#kfold = KFold(n_splits=10, random_state=0)
#cv_results = cross_val_score(bestBagging, X, y, cv=kfold, scoring='accuracy')
#print("Recommended Bagging --> Score: %0.2f (+/-) %0.2f)" % (cv_results.mean(), cv_results.std() * 2))
#kfold = KFold(n_splits=10, random_state=0)
#cv_results = cross_val_score(DefaultBagging, X, y, cv=kfold, scoring='accuracy')
#print("Default Bagging --> Score: %0.2f (+/-) %0.2f)" % (cv_results.mean(), cv_results.std() * 2))